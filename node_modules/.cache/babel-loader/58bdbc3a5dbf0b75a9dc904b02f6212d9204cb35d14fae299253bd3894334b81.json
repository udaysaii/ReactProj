{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\udays\\\\Downloads\\\\Trezo\\\\udaysai\\\\src\\\\services\\\\firebaseConfig.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getAnalytics } from \"firebase/analytics\";\n\n// Your Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDdvkWcfXeuNvsDJ7D9MbLv3KBsI66lx10\",\n  authDomain: \"udaysai3204.firebaseapp.com\",\n  projectId: \"udaysai3204\",\n  storageBucket: \"udaysai3204.firebasestorage.app\",\n  messagingSenderId: \"816479225374\",\n  appId: \"1:816479225374:web:72fb367440085ff06c500f\",\n  measurementId: \"G-EHDJ08S4KP\"\n};\nlet app, auth, analytics;\nconst FirebaseInitializer = ({\n  children\n}) => {\n  _s();\n  const [firebaseInitialized, setFirebaseInitialized] = useState(false);\n  useEffect(() => {\n    try {\n      // Initialize Firebase only once when the component mounts\n      app = initializeApp(firebaseConfig);\n      auth = getAuth(app);\n      analytics = getAnalytics(app);\n      setFirebaseInitialized(true); // Mark Firebase as initialized\n    } catch (error) {\n      console.error(\"Firebase initialization error\", error);\n    }\n  }, []);\n  if (process.env.NODE_ENV === 'production') {\n    const app = initializeApp(firebaseConfig);\n  }\n  if (!firebaseInitialized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Firebase...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this); // Show a loading indicator until Firebase is ready\n  }\n  return children; // Render your app once Firebase is initialized\n};\n_s(FirebaseInitializer, \"4vZAL3jG0HkK4qwOex1DKO2DpiE=\");\n_c = FirebaseInitializer;\nexport { FirebaseInitializer, auth, analytics };\nvar _c;\n$RefreshReg$(_c, \"FirebaseInitializer\");","map":{"version":3,"names":["useState","useEffect","initializeApp","getAuth","getAnalytics","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","analytics","FirebaseInitializer","children","_s","firebaseInitialized","setFirebaseInitialized","error","console","process","env","NODE_ENV","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/udays/Downloads/Trezo/udaysai/src/services/firebaseConfig.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\n// Your Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDdvkWcfXeuNvsDJ7D9MbLv3KBsI66lx10\",\r\n  authDomain: \"udaysai3204.firebaseapp.com\",\r\n  projectId: \"udaysai3204\",\r\n  storageBucket: \"udaysai3204.firebasestorage.app\",\r\n  messagingSenderId: \"816479225374\",\r\n  appId: \"1:816479225374:web:72fb367440085ff06c500f\",\r\n  measurementId: \"G-EHDJ08S4KP\"\r\n};\r\n\r\nlet app, auth, analytics;\r\n\r\nconst FirebaseInitializer = ({ children }) => {\r\n  const [firebaseInitialized, setFirebaseInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      // Initialize Firebase only once when the component mounts\r\n      app = initializeApp(firebaseConfig);\r\n      auth = getAuth(app);\r\n      analytics = getAnalytics(app);\r\n      setFirebaseInitialized(true); // Mark Firebase as initialized\r\n    } catch (error) {\r\n      console.error(\"Firebase initialization error\", error);\r\n    }\r\n  }, []);\r\n\r\n  if (process.env.NODE_ENV === 'production') {\r\n    const app = initializeApp(firebaseConfig);\r\n  }\r\n\r\n  if (!firebaseInitialized) {\r\n    return <div>Loading Firebase...</div>; // Show a loading indicator until Firebase is ready\r\n  }\r\n\r\n  return children; // Render your app once Firebase is initialized\r\n};\r\n\r\nexport { FirebaseInitializer, auth, analytics };\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,6BAA6B;EACzCC,SAAS,EAAE,aAAa;EACxBC,aAAa,EAAE,iCAAiC;EAChDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,IAAIC,GAAG,EAAEC,IAAI,EAAEC,SAAS;AAExB,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAErEC,SAAS,CAAC,MAAM;IACd,IAAI;MACF;MACAc,GAAG,GAAGb,aAAa,CAACK,cAAc,CAAC;MACnCS,IAAI,GAAGb,OAAO,CAACY,GAAG,CAAC;MACnBE,SAAS,GAAGb,YAAY,CAACW,GAAG,CAAC;MAC7BO,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,MAAMZ,GAAG,GAAGb,aAAa,CAACK,cAAc,CAAC;EAC3C;EAEA,IAAI,CAACc,mBAAmB,EAAE;IACxB,oBAAOf,OAAA;MAAAa,QAAA,EAAK;IAAmB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACzC;EAEA,OAAOZ,QAAQ,CAAC,CAAC;AACnB,CAAC;AAACC,EAAA,CAxBIF,mBAAmB;AAAAc,EAAA,GAAnBd,mBAAmB;AA0BzB,SAASA,mBAAmB,EAAEF,IAAI,EAAEC,SAAS;AAAG,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}