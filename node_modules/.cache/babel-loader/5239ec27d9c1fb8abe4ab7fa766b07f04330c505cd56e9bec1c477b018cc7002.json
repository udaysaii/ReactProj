{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\udays\\\\Downloads\\\\Trezo\\\\ecommerce-platform\\\\src\\\\components\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ProductCard from \"./ProductCard\";\nimport \"./ProductList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = ({\n  searchQuery\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n\n  // Dummy data for product list\n  const allProducts = [{\n    id: 1,\n    title: \"Product 1\",\n    imageName: \"product1.png\",\n    price: \"$29.99\"\n  }, {\n    id: 2,\n    title: \"Product 2\",\n    imageName: \"product2.jpg\",\n    price: \"$49.99\"\n  }, {\n    id: 3,\n    title: \"Product 3\",\n    imageName: \"product3.jpg\",\n    price: \"$19.99\"\n  }];\n  useEffect(() => {\n    const filteredProducts = searchQuery ? allProducts.filter(product => product.title.toLowerCase().includes(searchQuery.toLowerCase())) : allProducts;\n    setProducts(prevProducts => {\n      // Update the state only if the filteredProducts have changed\n      const isSame = prevProducts.length === filteredProducts.length && prevProducts.every((product, index) => product.id === filteredProducts[index].id);\n      return isSame ? prevProducts : filteredProducts;\n    });\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list\",\n    children: products.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n      id: product.id,\n      title: product.title,\n      imageName: product.imageName,\n      price: product.price\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","ProductCard","jsxDEV","_jsxDEV","ProductList","searchQuery","_s","products","setProducts","allProducts","id","title","imageName","price","filteredProducts","filter","product","toLowerCase","includes","prevProducts","isSame","length","every","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/udays/Downloads/Trezo/ecommerce-platform/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport \"./ProductList.css\";\r\n\r\nconst ProductList = ({ searchQuery }) => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  // Dummy data for product list\r\n  const allProducts = [\r\n    { id: 1, title: \"Product 1\", imageName: \"product1.png\", price: \"$29.99\" },\r\n    { id: 2, title: \"Product 2\", imageName: \"product2.jpg\", price: \"$49.99\" },\r\n    { id: 3, title: \"Product 3\", imageName: \"product3.jpg\", price: \"$19.99\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const filteredProducts = searchQuery\r\n      ? allProducts.filter((product) =>\r\n          product.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n        )\r\n      : allProducts;\r\n\r\n    setProducts((prevProducts) => {\r\n      // Update the state only if the filteredProducts have changed\r\n      const isSame =\r\n        prevProducts.length === filteredProducts.length &&\r\n        prevProducts.every((product, index) => product.id === filteredProducts[index].id);\r\n\r\n      return isSame ? prevProducts : filteredProducts;\r\n    });\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <div className=\"product-list\">\r\n      {products.length === 0 ? (\r\n        <p>No products found</p>\r\n      ) : (\r\n        products.map((product) => (\r\n          <ProductCard\r\n            key={product.id}\r\n            id={product.id}\r\n            title={product.title}\r\n            imageName={product.imageName}\r\n            price={product.price}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMU,WAAW,GAAG,CAClB;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,SAAS,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAS,CAAC,EACzE;IAAEH,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,SAAS,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAS,CAAC,EACzE;IAAEH,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,SAAS,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAS,CAAC,CAC1E;EAEDb,SAAS,CAAC,MAAM;IACd,MAAMc,gBAAgB,GAAGT,WAAW,GAChCI,WAAW,CAACM,MAAM,CAAEC,OAAO,IACzBA,OAAO,CAACL,KAAK,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,WAAW,CAACY,WAAW,CAAC,CAAC,CAChE,CAAC,GACDR,WAAW;IAEfD,WAAW,CAAEW,YAAY,IAAK;MAC5B;MACA,MAAMC,MAAM,GACVD,YAAY,CAACE,MAAM,KAAKP,gBAAgB,CAACO,MAAM,IAC/CF,YAAY,CAACG,KAAK,CAAC,CAACN,OAAO,EAAEO,KAAK,KAAKP,OAAO,CAACN,EAAE,KAAKI,gBAAgB,CAACS,KAAK,CAAC,CAACb,EAAE,CAAC;MAEnF,OAAOU,MAAM,GAAGD,YAAY,GAAGL,gBAAgB;IACjD,CAAC,CAAC;EACJ,CAAC,EAAE,CAACT,WAAW,CAAC,CAAC;EAEjB,oBACEF,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BlB,QAAQ,CAACc,MAAM,KAAK,CAAC,gBACpBlB,OAAA;MAAAsB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAExBtB,QAAQ,CAACuB,GAAG,CAAEd,OAAO,iBACnBb,OAAA,CAACF,WAAW;MAEVS,EAAE,EAAEM,OAAO,CAACN,EAAG;MACfC,KAAK,EAAEK,OAAO,CAACL,KAAM;MACrBC,SAAS,EAAEI,OAAO,CAACJ,SAAU;MAC7BC,KAAK,EAAEG,OAAO,CAACH;IAAM,GAJhBG,OAAO,CAACN,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKhB,CACF;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CA5CIF,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}